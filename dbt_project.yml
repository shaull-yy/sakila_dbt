
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'sakila_dbt'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'sakila_dbt'

vars:
  init_date: '1900-01-01'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

on-run-start:
  - create schema if not exists dwh;
  - create schema if not exists dwh_dim;
  - create schema if not exists dwh_fact;
  - create schema if not exists dwh_seed;
  - create table if not exists dwh.dbt_log (id varchar(50), model varchar(50), start_date TIMESTAMP,	end_date TIMESTAMP,	run_duration INTERVAL, run_dur_sec integer);
  - insert into dwh.dbt_log (id, model, start_date, end_date, run_duration, run_dur_sec) values('{{ invocation_id}}', null, now(), null, null, null);

on-run-end:
  - update dwh.dbt_log set end_date = now(), run_duration = now() - start_date, run_dur_sec = EXTRACT(EPOCH FROM (now() - start_date)) where id = '{{ invocation_id}}';
# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  sakila_dbt:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view
      +schema: example
      +enabled: false
    dim:
      +materialized: incremental
      +pre-hook: "{{ delete_from() }}"  #delete from {{this}}
      +schema: dim
    fact:
      +materialized: incremental
      +schema: fact
    seeds:
      +schema: seed
